/* You can add global styles to this file, and also import other style files */
@import url(asset/style/bootfish.css);
:root {
    --spacer: 0.2em; /* affect margin padding .btn*/
    --background-color: hsla(0, 0%, 0%, 0);

    --success-color: hsl(120 100% 25%);
    --success-color-text: hsl(0, 0%, 0%);

    --danger-color: hsl(0 90% 40%);
    --danger-color-text: hsl(0, 0%, 0%);

    --warning-color: hsl(40 90% 40%);
    --warning-color-text: hsl(0, 0%, 0%);

    --light-color: rgb(230 230 230);
    --light-color-text: rgb(37, 37, 37);

    --dark-color: rgb(20 20 20);
    --dark-color-text: rgb(245, 245, 245);

    --primary-color: hsl(200, 71%, 31%);
    --primary-color: hsl(239, 80%, 47%);
    --primary-color: hsl(217, 86%, 48%);
    --primary-color-text: hsl(0, 0%, 0%);

    --fs-200: clamp(0.7rem, calc(0.8rem + 0.05vw), 0.75rem);
    --fs-300: clamp(0.94rem, calc(0.92rem + 0.08vw), 0.98rem);
    --fs-400: clamp(1.13rem, calc(1.06rem + 0.33vw), 1.31rem);
    --fs-500: clamp(1.35rem, calc(1.21rem + 0.69vw), 1.75rem);
    --fs-600: clamp(1.62rem, calc(1.37rem + 1.24vw), 2.33rem);
    --fs-700: clamp(1.94rem, calc(1.54rem + 2.03vw), 3.11rem);
    --fs-800: clamp(2.33rem, calc(1.7rem + 3.15vw), 4.14rem);
    --fs-900: clamp(2.8rem, calc(1.85rem + 4.74vw), 5.52rem);
}

body {
    height: 100svh;
    display: grid;
    & > * {
        padding: 0.5em 0.5em 0 0.5em;
    }
}
input,
textarea {
    border: 3px solid;
    margin-block: 0.2em;
    border-radius: 5px;
    padding-inline: 0.2em;
    --_color-input: black;
    border-color: var(--_color-input);
    &[required]:is(:valid:not(.ng-invalid), .ng-valid) {
        --_color-input: var(--success-color);
    }
    &[required]:is(:user-invalid, .ng-invalid:where(.ng-dirty, .ng-touched)) {
        --_color-input: var(--danger-color);
    }
    &[required]:focus:is(:invalid, .ng-invalid) {
        --_color-input: var(--warning-color);
    }
    &:focus {
        box-shadow: 0 0 10px 2px var(--_color-input, black);
    }
    outline: none;
}
a {
    text-decoration: none;
    color: hsl(0 0 0);
}
button {
    border: none;
    background-color: transparent;
}

.table-song-storage {
    width: 100%;
    & * {
        text-align: start;
    }
}

.d-flex {
    display: flex;
}

.align-self-end {
    justify-self: end;
}

.justify-content-between {
    justify-content: space-between;
}
h1,
h2,
h3,
h4 {
    color: hsl(from var(--primary-color) h s 15);
}
.play-button {
    border-radius: 100vw;
    color: hsl(from var(--primary-color) h s 20);
    aspect-ratio: 1;
}
.search-card {
    background-color: hsl(from var(--primary-color) h s 90);

    border-radius: 0.5em;
    height: 100%;
    & img {
        border-radius: 0.4em 0.4em 0 0;
    }
    & .card-content {
        display: grid;
        grid-template-columns: 1fr max-content;
    }
}
div:has(> .card-content) {
    padding-inline: 0.25em;
    padding-bottom: 0.25em;
}

.complementary-info {
    font-size: var(--fs-200);
    color: hsl(0 0 30) !important;
    & * {
        color: hsl(0 0 30) !important;
    }
}

.search-content {
    --min-card-size: 22ch;
    --max-img-height: 100px;
    gap: 0.125em;
    & img {
        object-fit: cover;
        max-height: var(--max-img-height);
        width: 100%;
    }
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(var(--min-card-size), 1fr));
    & > section {
        display: grid;
        grid-template-columns: subgrid;
        grid-column: 1 / -1;
        gap: 0.2em;
        & > h2 {
            grid-column: 1 / -1;
        }
    }
}

table tr {
    border-bottom: solid var(--primary-color) 2px;
}
.align-items-center {
    align-items: center;
}

.flex-wrap {
    flex-wrap: wrap;
}

.d-grid {
    display: grid;
}
.place-item-center {
    place-items: center;
}
.h-100 {
    height: 100%;
}
.text-center {
    text-align: center;
}
header {
    display: grid;
    align-items: center;
    justify-content: space-between;
    grid-auto-columns: 1fr;
    grid-template-areas:
        'link'
        'user'
        'search';
    width: 100%;
    gap: 0.2em;
    padding-bottom: 0.125em;
    border-bottom: 6px solid var(--primary-color);
    @media screen and (min-width: 600px) {
        grid-auto-flow: column;
        grid-auto-columns: auto;
        grid-template-areas: 'link search user';
    }
    & > *:first-child {
        grid-area: link;
    }
    & > *:nth-child(2) {
        grid-area: search;
    }
    & > *:last-child(1) {
        grid-area: user;
    }
}

.pointer {
    cursor: pointer;
}
button {
    cursor: pointer;
}

.w-fit-content {
    width: max-content;
}

.popup {
    position: fixed;
    /* position: absolute; */
    top: 50%;
    right: 50%;
    transform: translate(50%, -50%);
    background: white;
    padding: 20px;
    background-color: hsl(from var(--primary-color) h s calc(l + 20));
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    border-radius: 0.5em;
    z-index: 10;
    max-width: 100%;

    &::after {
        content: '';
        position: fixed;
        width: 100vw;
        height: 100vh;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: -10;
    }
}

.text-dark {
    color: black;
}

input {
    max-width: 100%;
}

.float-right {
    float: right;
}

.underline {
    text-decoration: underline;
}

form {
    display: grid;
    grid-template-columns: 1fr 1fr;
    column-gap: 0.25em;
    & > div {
        display: grid;
        grid-template-columns: subgrid;
        align-items: center;
        grid-column: 1 / -1;
        & > label {
            grid-column: 1 / 2;
            justify-self: end;
            text-wrap-mode: nowrap;
        }
        & > :where(input, textarea) {
            grid-column: 2 / 3;
            justify-self: start;
            &:where(textarea) {
                width: 100%;
            }
        }
        & > *:only-child {
            grid-column: span 2;
            justify-self: center;
        }
    }
    & > button {
        grid-column: span 2;
        justify-self: center;
    }
}

.text-danger {
    color: var(--danger-color);
}
